<!DOCTYPE html>
<html lang="ru">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Моя прибыль</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <style>
      /* Убираем стрелки с input[type="number"] */
      input[type="number"]::-webkit-outer-spin-button,
      input[type="number"]::-webkit-inner-spin-button {
        -webkit-appearance: none;
        margin: 0;
      }
      input[type="number"] {
        -moz-appearance: textfield;
      }
    </style>
  </head>
  <body class="bg-gray-900 text-white">
    <div class="flex min-h-screen">
      <!-- Боковое меню -->
      <div
        class="w-72 bg-gray-800/50 backdrop-blur-lg border-r border-gray-700/50 p-8"
      >
        <div class="mb-8">
          <h1 class="text-xl font-semibold text-white mb-1">Trading Tools</h1>
          <p class="text-sm text-gray-400">Инструменты для трейдинга</p>
        </div>
        <nav class="space-y-1">
          <a
            href="index.html"
            class="flex items-center px-4 py-3 rounded-xl text-gray-400 hover:bg-gray-800/50 hover:text-white transition-all duration-200"
          >
            <svg
              class="w-5 h-5 mr-3"
              fill="none"
              stroke="currentColor"
              viewBox="0 0 24 24"
            >
              <path
                stroke-linecap="round"
                stroke-linejoin="round"
                stroke-width="2"
                d="M9 7h6m0 10v-3m-3 3h.01M9 17h.01M9 14h.01M12 14h.01M15 11h.01M12 11h.01M9 11h.01M7 21h10a2 2 0 002-2V5a2 2 0 00-2-2H7a2 2 0 00-2 2v14a2 2 0 002 2z"
              />
            </svg>
            Калькулятор
          </a>
          <a
            href="profit.html"
            class="flex items-center px-4 py-3 rounded-xl bg-blue-500/10 text-blue-400 border border-blue-500/20"
          >
            <svg
              class="w-5 h-5 mr-3"
              fill="none"
              stroke="currentColor"
              viewBox="0 0 24 24"
            >
              <path
                stroke-linecap="round"
                stroke-linejoin="round"
                stroke-width="2"
                d="M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z"
              />
            </svg>
            Моя прибыль
          </a>
          <a
            href="archive.html"
            class="flex items-center px-4 py-3 rounded-xl text-gray-400 hover:bg-gray-800/50 hover:text-white transition-all duration-200"
          >
            <svg
              class="w-5 h-5 mr-3"
              fill="none"
              stroke="currentColor"
              viewBox="0 0 24 24"
            >
              <path
                stroke-linecap="round"
                stroke-linejoin="round"
                stroke-width="2"
                d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z"
              />
            </svg>
            Архив
          </a>
          <!-- Кнопка настроек -->
          <button
            id="settingsBtn"
            class="w-full flex items-center px-4 py-3 rounded-xl text-gray-400 hover:bg-gray-800/50 hover:text-white transition-all duration-200"
          >
            <svg
              class="w-5 h-5 mr-3"
              fill="none"
              stroke="currentColor"
              viewBox="0 0 24 24"
            >
              <path
                stroke-linecap="round"
                stroke-linejoin="round"
                stroke-width="2"
                d="M10.325 4.317c.426-1.756 2.924-1.756 3.35 0a1.724 1.724 0 002.573 1.066c1.543-.94 3.31.826 2.37 2.37a1.724 1.724 0 001.065 2.572c1.756.426 1.756 2.924 0 3.35a1.724 1.724 0 00-1.066 2.573c.94 1.543-.826 3.31-2.37 2.37a1.724 1.724 0 00-2.572 1.065c-.426 1.756-2.924 1.756-3.35 0a1.724 1.724 0 00-2.573-1.066c-1.543.94-3.31-.826-2.37-2.37a1.724 1.724 0 00-1.065-2.572c-1.756-.426-1.756-2.924 0-3.35a1.724 1.724 0 001.066-2.573c-.94-1.543.826-3.31 2.37-2.37.996.608 2.296.07 2.572-1.065z"
              />
              <path
                stroke-linecap="round"
                stroke-linejoin="round"
                stroke-width="2"
                d="M15 12a3 3 0 11-6 0 3 3 0 016 0z"
              />
            </svg>
            Настройки
          </button>
          <!-- Форма настроек (скрыта по умолчанию) -->
          <div id="settingsForm" class="hidden mt-2">
            <div
              class="space-y-3 bg-gray-800/50 p-3 rounded-xl border border-gray-700/50"
            >
              <div>
                <label class="block text-sm text-gray-400 mb-2"
                  >День начала недели</label
                >
                <select
                  id="weekStartDay"
                  class="w-full bg-gray-900/50 border border-gray-700/50 rounded-lg px-3 py-1.5 text-white focus:outline-none focus:border-blue-500/50 text-sm"
                >
                  <option value="1">Понедельник</option>
                  <option value="2">Вторник</option>
                  <option value="3">Среда</option>
                  <option value="4">Четверг</option>
                  <option value="5">Пятница</option>
                  <option value="6">Суббота</option>
                  <option value="0">Воскресенье</option>
                </select>
              </div>
              <button
                id="saveSettings"
                class="w-full bg-blue-500/20 border border-blue-500/20 text-blue-400 py-1.5 px-4 rounded-lg hover:bg-blue-500/30 transition-colors text-sm"
              >
                Сохранить
              </button>
            </div>
          </div>
        </nav>
        <div class="mt-auto pt-8 border-t border-gray-700/50 mt-8">
          <div class="text-xs text-gray-400">Версия 1.0.0</div>
        </div>
      </div>

      <!-- Основной контент -->
      <div class="flex-1 p-8">
        <!-- Верхняя навигация -->
        <div class="mb-8">
          <a
            href="index.html"
            class="text-gray-400 hover:text-white transition-colors"
          >
            ← Вернуться к калькулятору
          </a>
        </div>

        <!-- Заголовок и кнопки -->
        <div class="flex justify-between items-center mb-8">
          <div>
            <h1 class="text-2xl font-bold">Моя прибыль</h1>
            <p class="text-gray-400 text-sm mt-1">
              Текущая неделя: <span id="currentWeek"></span>
            </p>
          </div>
          <div class="flex gap-4">
            <a
              href="archive.html"
              class="py-2 px-4 bg-gray-800 text-white rounded-lg hover:bg-gray-700 transition-colors"
            >
              Архив
            </a>
            <button
              id="clearData"
              class="py-2 px-4 bg-red-500 text-white rounded-lg hover:bg-red-600 transition-colors"
            >
              Очистить все
            </button>
          </div>
        </div>

        <!-- Статистика -->
        <div class="grid grid-cols-1 md:grid-cols-3 gap-4 mb-8">
          <div class="bg-gray-800 rounded-lg p-6">
            <h3 class="text-gray-400 text-sm mb-2">Всего сделок</h3>
            <div id="totalTrades" class="text-2xl font-bold">0</div>
          </div>
          <div class="bg-gray-800 rounded-lg p-6">
            <h3 class="text-gray-400 text-sm mb-2">Средний результат</h3>
            <div id="averageResult" class="text-2xl font-bold">0%</div>
          </div>
          <div class="bg-gray-800 rounded-lg p-6">
            <h3 class="text-gray-400 text-sm mb-2">Общий результат</h3>
            <div id="totalResult" class="text-2xl font-bold">0%</div>
          </div>
        </div>

        <!-- Таблица сделок -->
        <div
          class="bg-gray-800/50 backdrop-blur-sm border border-gray-700/50 rounded-2xl overflow-hidden max-w-2xl"
        >
          <table class="w-full">
            <thead>
              <tr class="text-sm text-gray-400 border-b border-gray-700/50">
                <th class="text-left px-5 py-3">Дата</th>
                <th class="text-center px-5 py-3 w-36">Результат</th>
              </tr>
            </thead>
            <tbody id="tradesTableBody">
              <!-- Строки для текущей недели -->
              <tr
                class="border-b border-gray-700/50 transition-colors hover:bg-gray-800/50"
              >
                <td class="px-5 py-3 font-medium">Среда</td>
                <td class="px-5 py-3">
                  <div class="relative group">
                    <input
                      type="number"
                      step="0.01"
                      class="w-full bg-gray-900/20 border-2 border-gray-700/30 rounded-lg px-3 pr-6 py-2 text-center focus:outline-none group-hover:border-gray-600/50 focus:border-blue-500/30 focus:bg-gray-900/30 transition-all placeholder-gray-600"
                      placeholder="0.00"
                      oninput="this.value = this.value.replace(/[^0-9.-]/g, '')"
                    />
                    <div
                      class="absolute inset-0 rounded-xl bg-gradient-to-r from-transparent via-gray-700/5 to-transparent opacity-0 group-hover:opacity-100 transition-opacity pointer-events-none"
                    ></div>
                  </div>
                </td>
              </tr>
              <tr
                class="border-b border-gray-700/50 transition-colors hover:bg-gray-800/50"
              >
                <td class="px-5 py-3 font-medium">Четверг</td>
                <td class="px-5 py-3">
                  <div class="relative group">
                    <input
                      type="number"
                      step="0.01"
                      class="w-full bg-gray-900/20 border-2 border-gray-700/30 rounded-lg px-3 pr-6 py-2 text-center focus:outline-none group-hover:border-gray-600/50 focus:border-blue-500/30 focus:bg-gray-900/30 transition-all placeholder-gray-600"
                      placeholder="0.00"
                      oninput="this.value = this.value.replace(/[^0-9.-]/g, '')"
                    />
                    <div
                      class="absolute inset-0 rounded-xl bg-gradient-to-r from-transparent via-gray-700/5 to-transparent opacity-0 group-hover:opacity-100 transition-opacity pointer-events-none"
                    ></div>
                  </div>
                </td>
              </tr>
              <tr
                class="border-b border-gray-700/50 transition-colors hover:bg-gray-800/50"
              >
                <td class="px-5 py-3 font-medium">Пятница</td>
                <td class="px-5 py-3">
                  <div class="relative group">
                    <input
                      type="number"
                      step="0.01"
                      class="w-full bg-gray-900/20 border-2 border-gray-700/30 rounded-lg px-3 pr-6 py-2 text-center focus:outline-none group-hover:border-gray-600/50 focus:border-blue-500/30 focus:bg-gray-900/30 transition-all placeholder-gray-600"
                      placeholder="0.00"
                      oninput="this.value = this.value.replace(/[^0-9.-]/g, '')"
                    />
                    <div
                      class="absolute inset-0 rounded-xl bg-gradient-to-r from-transparent via-gray-700/5 to-transparent opacity-0 group-hover:opacity-100 transition-opacity pointer-events-none"
                    ></div>
                  </div>
                </td>
              </tr>
              <tr
                class="border-b border-gray-700/50 transition-colors hover:bg-gray-800/50"
              >
                <td class="px-5 py-3 font-medium">Суббота</td>
                <td class="px-5 py-3">
                  <div class="relative group">
                    <input
                      type="number"
                      step="0.01"
                      class="w-full bg-gray-900/20 border-2 border-gray-700/30 rounded-lg px-3 pr-6 py-2 text-center focus:outline-none group-hover:border-gray-600/50 focus:border-blue-500/30 focus:bg-gray-900/30 transition-all placeholder-gray-600"
                      placeholder="0.00"
                      oninput="this.value = this.value.replace(/[^0-9.-]/g, '')"
                    />
                    <div
                      class="absolute inset-0 rounded-xl bg-gradient-to-r from-transparent via-gray-700/5 to-transparent opacity-0 group-hover:opacity-100 transition-opacity pointer-events-none"
                    ></div>
                  </div>
                </td>
              </tr>
              <tr
                class="border-b border-gray-700/50 transition-colors hover:bg-gray-800/50"
              >
                <td class="px-5 py-3 font-medium">Воскресенье</td>
                <td class="px-5 py-3">
                  <div class="relative group">
                    <input
                      type="number"
                      step="0.01"
                      class="w-full bg-gray-900/20 border-2 border-gray-700/30 rounded-lg px-3 pr-6 py-2 text-center focus:outline-none group-hover:border-gray-600/50 focus:border-blue-500/30 focus:bg-gray-900/30 transition-all placeholder-gray-600"
                      placeholder="0.00"
                      oninput="this.value = this.value.replace(/[^0-9.-]/g, '')"
                    />
                    <div
                      class="absolute inset-0 rounded-xl bg-gradient-to-r from-transparent via-gray-700/5 to-transparent opacity-0 group-hover:opacity-100 transition-opacity pointer-events-none"
                    ></div>
                  </div>
                </td>
              </tr>
              <tr
                class="border-b border-gray-700/50 transition-colors hover:bg-gray-800/50"
              >
                <td class="px-5 py-3 font-medium">Понедельник</td>
                <td class="px-5 py-3">
                  <div class="relative group">
                    <input
                      type="number"
                      step="0.01"
                      class="w-full bg-gray-900/20 border-2 border-gray-700/30 rounded-lg px-3 pr-6 py-2 text-center focus:outline-none group-hover:border-gray-600/50 focus:border-blue-500/30 focus:bg-gray-900/30 transition-all placeholder-gray-600"
                      placeholder="0.00"
                      oninput="this.value = this.value.replace(/[^0-9.-]/g, '')"
                    />
                    <div
                      class="absolute inset-0 rounded-xl bg-gradient-to-r from-transparent via-gray-700/5 to-transparent opacity-0 group-hover:opacity-100 transition-opacity pointer-events-none"
                    ></div>
                  </div>
                </td>
              </tr>
              <tr
                class="border-b border-gray-700/50 transition-colors hover:bg-gray-800/50"
              >
                <td class="px-5 py-3 font-medium">Вторник</td>
                <td class="px-5 py-3">
                  <div class="relative group">
                    <input
                      type="number"
                      step="0.01"
                      class="w-full bg-gray-900/20 border-2 border-gray-700/30 rounded-lg px-3 pr-6 py-2 text-center focus:outline-none group-hover:border-gray-600/50 focus:border-blue-500/30 focus:bg-gray-900/30 transition-all placeholder-gray-600"
                      placeholder="0.00"
                      oninput="this.value = this.value.replace(/[^0-9.-]/g, '')"
                    />
                    <div
                      class="absolute inset-0 rounded-xl bg-gradient-to-r from-transparent via-gray-700/5 to-transparent opacity-0 group-hover:opacity-100 transition-opacity pointer-events-none"
                    ></div>
                  </div>
                </td>
              </tr>
            </tbody>
          </table>
        </div>
      </div>
    </div>

    <script>
      document.addEventListener("DOMContentLoaded", () => {
        const totalTrades = document.getElementById("totalTrades");
        const averageResult = document.getElementById("averageResult");
        const totalResult = document.getElementById("totalResult");
        const tradesTableBody = document.getElementById("tradesTableBody");
        const clearDataBtn = document.getElementById("clearData");

        // Настройки
        const settingsBtn = document.getElementById("settingsBtn");
        const settingsForm = document.getElementById("settingsForm");
        const weekStartDay = document.getElementById("weekStartDay");
        const saveSettings = document.getElementById("saveSettings");

        // Функция для получения даты начала текущей недели
        function getCurrentWeekStart() {
          const now = new Date();
          const day = now.getDay(); // 0 = воскресенье
          const startDay = parseInt(weekStartDay.value);
          const diff = day >= startDay ? day - startDay : day + (7 - startDay);
          now.setDate(now.getDate() - diff);
          return now;
        }

        // Функция для получения названий дней недели в нужном порядке
        function getWeekDays(startDay) {
          const days = [
            "Воскресенье",
            "Понедельник",
            "Вторник",
            "Среда",
            "Четверг",
            "Пятница",
            "Суббота",
          ];

          // Переупорядочиваем массив дней, начиная с выбранного дня
          const reorderedDays = [
            ...days.slice(startDay),
            ...days.slice(0, startDay),
          ];

          return reorderedDays;
        }

        // Функция обновления дней недели в таблице
        function updateTableDays() {
          const startDay = parseInt(weekStartDay.value);
          const weekDays = getWeekDays(startDay);
          const rows = tradesTableBody.querySelectorAll("tr");

          rows.forEach((row, index) => {
            const dayCell = row.querySelector("td:first-child");
            dayCell.textContent = weekDays[index];
          });
        }

        // Загружаем сохраненные настройки
        const settings = JSON.parse(
          localStorage.getItem("profitSettings") || "{}"
        );
        weekStartDay.value = settings.weekStartDay || "3"; // По умолчанию среда
        updateTableDays(); // Обновляем дни при загрузке

        // Показать/скрыть форму настроек
        settingsBtn.addEventListener("click", () => {
          settingsForm.classList.toggle("hidden");
          settingsBtn.classList.toggle("text-blue-400");
          settingsBtn.classList.toggle("bg-blue-500/10");
          settingsBtn.classList.toggle("border");
          settingsBtn.classList.toggle("border-blue-500/20");
        });

        // Сохранение настроек
        saveSettings.addEventListener("click", () => {
          const settings = {
            weekStartDay: weekStartDay.value,
          };
          localStorage.setItem("profitSettings", JSON.stringify(settings));

          // Обновляем дни недели в таблице
          updateTableDays();

          // Анимация успешного сохранения
          saveSettings.textContent = "Сохранено!";
          saveSettings.classList.add(
            "bg-green-500/20",
            "border-green-500/20",
            "text-green-400"
          );
          setTimeout(() => {
            saveSettings.textContent = "Сохранить";
            saveSettings.classList.remove(
              "bg-green-500/20",
              "border-green-500/20",
              "text-green-400"
            );
          }, 1000);
        });

        // Функция для форматирования даты
        function formatDate(date) {
          return date.toLocaleDateString("ru-RU", {
            day: "2-digit",
            month: "2-digit",
            year: "numeric",
          });
        }

        // Отображаем текущую неделю
        const weekStart = getCurrentWeekStart();
        const weekEnd = new Date(weekStart);
        weekEnd.setDate(weekStart.getDate() + 6); // +6 для 7 дней
        document.getElementById("currentWeek").textContent = `${formatDate(
          weekStart
        )} - ${formatDate(weekEnd)}`;

        // Загружаем сохраненные результаты для текущей недели
        const inputs = document.querySelectorAll("input[type='number']");
        const weekKey = formatDate(weekStart);
        const savedData = JSON.parse(
          localStorage.getItem("weeklyData") || "{}"
        );
        const weekData = savedData[weekKey] || [];

        inputs.forEach((input, index) => {
          // Устанавливаем начальное значение
          if (weekData[index]) {
            input.value = weekData[index];
            updateInputColor(input);
          }

          // Сохраняем результат при изменении
          input.addEventListener("change", () => {
            const newWeekData = Array.from(inputs).map((input) =>
              input.value ? input.value.replace("%", "") : null
            );
            savedData[weekKey] = newWeekData;
            localStorage.setItem("weeklyData", JSON.stringify(savedData));
            updateInputColor(input);
            updateStats();
          });

          // Обновляем цвет при вводе
          input.addEventListener("input", () => {
            // Удаляем все символы кроме цифр, точки и минуса
            input.value = input.value.replace(/[^0-9.-]/g, "");
            updateInputColor(input);
          });
        });

        // Функция обновления цвета input в зависимости от значения
        function updateInputColor(input) {
          const value = parseFloat(input.value) || 0;

          // Ограничиваем до 2 знаков после запятой
          if (input.value && input.value.includes(".")) {
            const parts = input.value.split(".");
            if (parts[1].length > 2) {
              input.value = Number(input.value).toFixed(2);
            }
          }

          input.className = `w-full bg-gray-900/20 border-2 border-gray-700/30 rounded-lg px-3 pr-6 py-2 text-center focus:outline-none group-hover:border-gray-600/50 focus:border-blue-500/30 focus:bg-gray-900/30 transition-all placeholder-gray-600 ${
            value > 0
              ? "text-green-400 border-green-500/20 focus:border-green-500/30"
              : value < 0
              ? "text-red-400 border-red-500/20 focus:border-red-500/30"
              : "text-white"
          }`;

          // Добавляем процент после числа
          const suffix = document.createElement("span");
          suffix.textContent = "%";
          suffix.style.position = "absolute";
          suffix.style.right = "12px";
          suffix.style.top = "50%";
          suffix.style.transform = "translateY(-50%)";
          suffix.style.pointerEvents = "none";
          suffix.className =
            value > 0
              ? "text-green-400"
              : value < 0
              ? "text-red-400"
              : "text-gray-500";

          // Удаляем старый суффикс если есть
          const oldSuffix = input.parentNode.querySelector("span");
          if (oldSuffix) oldSuffix.remove();

          // Добавляем новый суффикс
          input.parentNode.appendChild(suffix);
        }

        // Обновление статистики
        function updateStats() {
          const weekData = Array.from(inputs).map(
            (input) => parseFloat(input.value?.replace("%", "")) || 0
          );

          const totalTrades = weekData.filter((val) => val !== 0).length;
          const totalResult = weekData.reduce((sum, val) => sum + val, 0);
          const avgResult = totalTrades > 0 ? totalResult / totalTrades : 0;

          document.getElementById("totalTrades").textContent = totalTrades;
          document.getElementById(
            "totalResult"
          ).textContent = `${totalResult.toFixed(2)}%`;
          document.getElementById(
            "averageResult"
          ).textContent = `${avgResult.toFixed(2)}%`;

          // Обновляем цвета результатов
          document.getElementById(
            "totalResult"
          ).className = `text-2xl font-bold ${
            totalResult > 0
              ? "text-green-400"
              : totalResult < 0
              ? "text-red-400"
              : "text-gray-400"
          }`;
          document.getElementById(
            "averageResult"
          ).className = `text-2xl font-bold ${
            avgResult > 0
              ? "text-green-400"
              : avgResult < 0
              ? "text-red-400"
              : "text-gray-400"
          }`;
        }

        // Первоначальное обновление статистики
        updateStats();

        // Обработчик очистки данных
        clearDataBtn.addEventListener("click", () => {
          if (confirm("Вы уверены, что хотите удалить все данные?")) {
            localStorage.removeItem("weeklyData");
            inputs.forEach((input) => (input.value = ""));
            updateStats();
          }
        });
      });
    </script>
  </body>
</html>
